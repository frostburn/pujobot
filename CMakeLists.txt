CMAKE_MINIMUM_REQUIRED(VERSION 3.25.1)
PROJECT(pujobot LANGUAGES C)

set(VERSION_MAJOR 0)
set(VERSION_MINOR 1)
set(VERSION_PATCH 0)

set(CMAKE_POSITION_INDEPENDENT_CODE ON)

find_package(OpenMP)
if (OPENMP_FOUND)
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
endif()

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

set(CMAKE_C_FLAGS_DEBUG "-g")
set(CMAKE_C_FLAGS_RELEASE "-O3")

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra")

SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin")
SET(LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/lib")

INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/include")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/api")
LINK_DIRECTORIES(${LIBRARY_OUTPUT_PATH})

ADD_SUBDIRECTORY(src)

ENABLE_TESTING()
ADD_SUBDIRECTORY(test)

ADD_EXECUTABLE(demo demo.c)
TARGET_LINK_LIBRARIES(demo pujobot)

CONFIGURE_FILE (api/pujo.h.in ${CMAKE_CURRENT_SOURCE_DIR}/api/pujo.h @ONLY)

ADD_LIBRARY(pujo SHARED lib.c)
SET_TARGET_PROPERTIES(pujo PROPERTIES
    SOVERSION 1
    PUBLIC_HEADER api/pujo.h)
TARGET_LINK_LIBRARIES(pujo pujobot)
